buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

group = 'org.deku.leoz'
version = '1.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin {
    kotlinOptions {
        // masc20181101. android support
        // API levels < 24 are not compatible with some java8 bytecode kt compiler produces
        jvmTarget = JavaVersion.VERSION_1_6
    }
}

compileTestKotlin {
    kotlinOptions {
        // Some test cases require java 8 features (eg JAX-RS SSE tests)
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
}

//region Prototype test setup
test {
    useJUnit {
        includeCategories 'sx.junit.StandardTest'
    }
}

sourceSets {
    test {
        java {
            srcDirs += file('src/prototype/java')
        }
    }
}
//endregion

dependencies {
    compile(
            project(':sx-common'),
            project(':sx-serialization'),
            project(':sx-mq'),
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Kodein
            "com.github.salomonbrys.kodein:kodein:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-erased:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-core:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-conf:$v_kodein",

            // i18n additions, eg. ISO 3166-1 country codes
            "com.neovisionaries:nv-i18n:1.22"
    )

    compileOnly(
            // JSR-310 / java.time drop-in replacement
            "org.threeten:threetenbp:$v_threeten",

            // Swagger for json doc
            "io.swagger:swagger-annotations:$v_swagger",
            dependencies.create("io.swagger:swagger-jaxrs:$v_swagger") {
                exclude group: 'javax.ws.rs', module: 'jsr311-api'
            },

            // Jackson
            "com.fasterxml.jackson.core:jackson-databind:$v_jackson",
            "com.fasterxml.jackson.core:jackson-annotations:$v_jackson",

            // JAX-RS
            "javax.ws.rs:javax.ws.rs-api:$v_javax_ws_rs",

            // REST
            "io.github.openfeign:feign-core:$v_feign",
            "io.github.openfeign:feign-okhttp:$v_feign",
            dependencies.create("io.github.openfeign:feign-jaxrs:$v_feign") {
                exclude group: 'javax.ws.rs', module: 'jsr311-api'
            },

            // YAML
            "org.yaml:snakeyaml:$v_snakeyaml",

            // MQTT client
            "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$v_paho",

            // Kryo
            "com.esotericsoftware:kryo:$v_kryo",
            "de.javakaffee:kryo-serializers:$v_kryo_serializers",

            // Logging
            "ch.qos.logback:logback-classic:$v_logback",

            // Tika, content analysis framework
            "org.apache.tika:tika-core:$v_apache_tika"
    )

    testCompile(
            "junit:junit:$v_junit",
            "ch.qos.logback:logback-classic:$v_logback",

            // JSR-310 / java.time drop-in replacement
            "org.threeten:threetenbp:$v_threeten",

            // REST
            // JAX-RS
            "javax.ws.rs:javax.ws.rs-api:$v_javax_ws_rs",

            // Jersey REST client
            "org.glassfish.jersey.core:jersey-client:$v_jersey",
            "org.glassfish.jersey.ext:jersey-proxy-client:$v_jersey",
            "org.glassfish.jersey.media:jersey-media-sse:$v_jersey",
            "org.glassfish.jersey.inject:jersey-hk2:$v_jersey",

            // RESTeasy client
            "org.jboss.resteasy:resteasy-client:$v_resteasy",
            "org.jboss.resteasy:resteasy-jackson2-provider:$v_resteasy",

            "io.github.openfeign:feign-core:$v_feign",
            "io.github.openfeign:feign-jackson:$v_feign",
            "io.github.openfeign:feign-okhttp:$v_feign",
            dependencies.create("io.github.openfeign:feign-jaxrs:$v_feign") {
                exclude group: 'javax.ws.rs', module: 'jsr311-api'
            },

            // Jackson
            "com.fasterxml.jackson.core:jackson-databind:$v_jackson",
            "com.fasterxml.jackson.core:jackson-annotations:$v_jackson",

            // MQTT client
            "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$v_paho",

            // Tika, content analysis framework
            "org.apache.tika:tika-core:$v_apache_tika"
    )
}



