buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'

group = 'org.deku.leoz'
version = '1.0'
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}

configurations {
    // TODO: compileOnly doesn't work property with AndroidStudio (will compile, but doesn't see classes in editor etc.)
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}


//region Prototype test setup
configurations {
    prototypeCompile.extendsFrom testCompile
    prototypeRuntime.extendsFrom testRuntime
}

sourceSets {
    def prototypeBaseDir = file('src/prototype')
    prototype {
        java.srcDirs = [new File(prototypeBaseDir, 'java')]
        resources.srcDirs = [new File(prototypeBaseDir, 'resources')]
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task prototype(type: Test, description: 'Run prototype tests.') {
    testClassesDir sourceSets.prototype.output.classesDir
    classpath = sourceSets.prototype.runtimeClasspath
}
//endregion

dependencies {
    compile(
            project(':sx-common'),
            project(':sx-serialization'),
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Kodein
            "com.github.salomonbrys.kodein:kodein:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-core:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-conf:$v_kodein",
    )

    provided(
            // Swagger for json doc
            "io.swagger:swagger-annotations:$v_swagger",
            "com.fasterxml.jackson.core:jackson-databind:$v_jackson",
            // JAX-RS
            "javax.ws.rs:javax.ws.rs-api:2.0.1",
            // REST
            "com.netflix.feign:feign-core:$v_feign",
            "com.netflix.feign:feign-jackson:$v_feign",
            "com.netflix.feign:feign-jaxrs:$v_feign",
            // YAML
            "org.yaml:snakeyaml:$v_snakeyaml"
    )

    testCompile(
            "junit:junit:$v_junit",
            "ch.qos.logback:logback-classic:$v_logback",

            // REST
            "com.netflix.feign:feign-core:$v_feign",
            "com.netflix.feign:feign-jackson:$v_feign",
            "com.netflix.feign:feign-jaxrs:$v_feign",
    )
}
