sourceCompatibility = 1.8
version = '1.0'

apply plugin: 'kotlin'

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
    }
}

configurations {
    provided {
        dependencies.all { dep ->
            configurations.default.exclude group: dep.group, module: dep.name
        }
    }
    compile.extendsFrom provided
}

dependencies {
    compile(
            project(':libs:sx-common'),
            project(':libs:sx-jms'),
            project(':libs:sx-rsync'),
            project(':libs:sx-serialization'),
            project(':libs:sx-discovery'),
            // Watchservice replacement for OSX
            project(':libs:barbarywatchservice'),
            // Kotlin
            "org.jetbrains.kotlin:kotlin-runtime:$v_kotlin",
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",
            // logging
            "org.apache.commons:commons-lang3:$v_commons_lang",
            "ch.qos.logback:logback-classic:$v_logback",
            "org.slf4j:jcl-over-slf4j:$v_slf4j",
            // Guava
            "com.google.guava:guava:$v_guava",
            // Commons
            "commons-io:commons-io:$v_commons_io",
            // javax
            "javax.ws.rs:javax.ws.rs-api:$v_javax_ws_rs",
            // kryo
            "com.esotericsoftware:kryo:4.0.0",
            "net.java.dev.jna:jna:$v_jna",
            "net.java.dev.jna:jna-platform:$v_jna",
            // YAML
            "org.yaml:snakeyaml:$v_snakeyaml",
            "com.esotericsoftware.yamlbeans:yamlbeans:1.09"
    )

    provided(
            // Persistence
            "org.eclipse.persistence:javax.persistence:$v_javax_persistence",
            // Swagger for json doc
            "io.swagger:swagger-annotations:$v_swagger",
            "com.fasterxml.jackson.core:jackson-databind:$v_jackson",
            // ActiveMQ
            "org.apache.activemq:activemq-broker:$v_activemq",
            "org.apache.activemq:activemq-kahadb-store:$v_activemq",
            "org.apache.activemq:activemq-jms-pool:$v_activemq",
            "org.apache.activemq:activemq-jaas:$v_activemq",
            "org.apache.activemq:activemq-mqtt:$v_activemq",
            dependencies.create("org.apache.activemq:activemq-http:$v_activemq") {
                exclude group: 'org.springframework'
                exclude group: 'org.apache.activemq', module: 'activemq-spring'
                exclude group: 'org.eclipse.jetty.aggregate'
            },
            // HTTP support
            "org.apache.httpcomponents:httpclient:$v_apache_httpclient",
            "com.thoughtworks.xstream:xstream:$v_xstream",
            // Artemis
            "org.apache.activemq:artemis-jms-server:1.4.0",
            // Spring
            "org.springframework:spring-jms:$v_spring"
    )

    testCompile(
            "junit:junit:$v_junit",
            // webservice client libraries for test cases
            "org.jboss.resteasy:resteasy-client:$v_resteasy",
            // jackson JSON serializer
            "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$v_jackson",
            "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$v_jackson"
    )
}