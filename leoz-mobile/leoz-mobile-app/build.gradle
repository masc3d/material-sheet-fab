import java.nio.file.Paths

buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url '../../leoz-build/repo'
        }
    }

    dependencies {
        classpath(
                'com.android.tools.build:gradle:2.3.3',
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin",
                "com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.7.3",
                "com.trello:victor:1.0.0",
                "sx:sx-packager-gradle:0.1",
        )
    }

    ext {
        v_anko = '0.10.1'
        v_material_dialogs = '0.9.4.7'
        v_parceler = '1.1.9'
        v_roboelectric = '3.3.2'
        v_rxlifecycle = '2.1.0'
        v_stetho = '1.5.0'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'com.trello.victor'
apply plugin: 'sx-packager-android'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

def sdk = android.getSdkDirectory().toString()
def adb = android.getAdbExe().toString()

def GENERATED_DIR = project.projectDir.toPath()
        .resolve('src')
        .resolve('generated')
        .toFile()

def GENERATED_SVG_DIR = new File(GENERATED_DIR,
        'svg')

configurations {
    // Configurations for libraries using dev/prod product flavors (for improved build performance)
    devDebugCompile
    devReleaseCompile
    prodDebugCompile
    prodReleaseCompile
}

android {
    compileSdkVersion 26
    buildToolsVersion v_android_buildtools

    defaultConfig {
        applicationId "org.deku.leoz.mobile"
        targetSdkVersion 26
        versionCode 2
        versionName "0.78-SNAPSHOT"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary true

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    dataBinding {
        enabled true
    }

    productFlavors {
        dev {
            // Enable pre-dexing to produce an APK that can be tested on
            // Android 5.0+ without the time-consuming DEX build processes.
            minSdkVersion 21
        }

        prod {
            // The actual minSdkVersion for the production version.
            minSdkVersion 16
        }
    }

    signingConfigs {
        release {
            keyAlias 'leoz-mobile'
            keyPassword '6TL3IpcUhOv7K1dZ'
            storeFile new File(project.projectDir, '../leoz-mobile.jks')
            storePassword 'QzIKjZeRkct3B0on'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
            testProguardFile('proguard-rules.pro')
        }
    }

    sourceSets {
        main {
            svg.srcDirs += 'src/main/svg'
            java.srcDirs += 'src/main/kotlin'

            res.srcDirs += GENERATED_SVG_DIR
        }
    }

    packagingOptions {
        // Exclude duplicates ad unnecessary files for a clean apk
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/kodein-android-compileKotlin.kotlin_module'
        exclude 'META-INF/kodein-compileKotlin.kotlin_module'
        exclude 'META-INF/kotlin-runtime.kotlin_module'
        exclude 'META-INF/kotlin-stdlib.kotlin_module'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/rxjava-async-util.properties'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/rxkotlin.properties'
        exclude 'META-INF/rxkotlin-compileKotlin.kotlin_module'
        exclude 'META-INF/rxlifecycle-kotlin-compileReleaseKotlin.kotlin_module'
        exclude 'META-INF/sx-android-compileReleaseKotlin.kotlin_module'
        exclude 'META-INF/sx-common-compileKotlin.kotlin_module'
        exclude 'kotlin/annotation/annotation.kotlin_builtins'
        exclude 'kotlin/collections/collections.kotlin_builtins'
        exclude 'kotlin/internal/internal.kotlin_builtins'
        exclude 'kotlin/kotlin.kotlin_builtins'
        exclude 'kotlin/ranges/ranges.kotlin_builtins'
        exclude 'kotlin/reflect/reflect.kotlin_builtins'
    }
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = false
    orderByMethodCount = false
    verbose = false
    maxTreeDepth = Integer.MAX_VALUE
    teamCityIntegration = false
    teamCitySlug = null
    runOnEachAssemble = false
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    devDebugCompile(
            project(path: ':sx-android', configuration: 'devDebug'),
            project(path: ':sx-android-honeywell', configuration: 'devDebug'),
            project(path: ':leoz-mobile-data', configuration: 'devDebug')
    )

    devReleaseCompile(
            project(path: ':sx-android', configuration: 'devRelease'),
            project(path: ':sx-android-honeywell', configuration: 'devRelease'),
            project(path: ':leoz-mobile-data', configuration: 'devRelease')
    )

    prodDebugCompile(
            project(path: ':sx-android', configuration: 'prodDebug'),
            project(path: ':sx-android-honeywell', configuration: 'prodDebug'),
            project(path: ':leoz-mobile-data', configuration: 'prodDebug')
    )

    prodReleaseCompile(
            project(path: ':sx-android', configuration: 'prodRelease'),
            project(path: ':sx-android-honeywell', configuration: 'prodRelease'),
            project(path: ':leoz-mobile-data', configuration: 'prodRelease')
    )

    compile(
            project(':sx-common'),
            project(':sx-serialization'),
            project(':sx-mq'),
            project(':leoz-common'),
            project(':material-sheet-fab'),
            project(':camerakit'),
            fileTree(dir: 'libs', include: ['*.jar']),

            // Android
            "com.android.support:support-annotations:$v_android_support",
            "com.android.support:support-v13:$v_android_support",
            "com.android.support:appcompat-v7:$v_android_support",
            "com.android.support:design:$v_android_support",
            "com.android.support:cardview-v7:$v_android_support",
            "com.android.support:recyclerview-v7:$v_android_support",
            'com.android.support:multidex:1.0.1',

            // Kotlin
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Kodein
            "com.github.salomonbrys.kodein:kodein:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-android:$v_kodein",
            // Kodein implementation using erased types (no generics support, but much faster on android)
            "com.github.salomonbrys.kodein:kodein-erased:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-conf:$v_kodein",

            // Logging
            "org.slf4j:slf4j-api:$v_slf4j",
            "org.slf4j:jul-to-slf4j:$v_slf4j",
            dependencies.create("com.github.tony19:logback-android-classic:1.1.1-6") {
                exclude group: 'com.google.android', module: 'android'
            },

            // Reactive
            "io.reactivex.rxjava2:rxjava:$v_rxjava",
            "io.reactivex.rxjava2:rxandroid:2.0.1",
            "io.reactivex:rxkotlin:$v_rxkotlin",
            "com.jakewharton.rxbinding2:rxbinding:2.0.0",
            "com.trello.rxlifecycle2:rxlifecycle:$v_rxlifecycle",
            "com.trello.rxlifecycle2:rxlifecycle-kotlin:$v_rxlifecycle",
            "com.trello.rxlifecycle2:rxlifecycle-components:$v_rxlifecycle",
            "com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar",

            // REST
            "io.github.openfeign:feign-core:$v_feign",
            "io.github.openfeign:feign-jackson:$v_feign",
            "io.github.openfeign:feign-jaxrs:$v_feign",

            // Requery
            "io.requery:requery:$v_requery",
            "io.requery:requery-kotlin:$v_requery",
            "io.requery:requery-android:$v_requery",
            "io.requery:sqlite-android:3.20.0",

            // Miscellaneous
            "io.swagger:swagger-annotations:$v_swagger",

            // Kotlin extensions for activity/fragment state persistence
            "com.github.tinsukE:icekick:0.2",

            "org.parceler:parceler-api:$v_parceler",
            'com.journeyapps:zxing-android-embedded:3.5.0',

            // YAML
            "pl.droidsonroids.yaml:snakeyaml:1.18-android",

            // Signature pad
            "com.github.gcacace:signature-pad:1.2.1",

            // MQTT client
            "org.eclipse.paho:org.eclipse.paho.client.mqttv3:$v_paho",
            "org.eclipse.paho:org.eclipse.paho.android.service:$v_paho",

            'com.github.pwittchen:reactivenetwork-rx2:0.12.1',

            // Android (multipart) upload service
            'net.gotev:uploadservice:3.4',

            // Kryo
            dependencies.create("com.esotericsoftware:kryo:$v_kryo") {
                exclude group: 'org.ow2.asm', module: 'asm'
            },
            dependencies.create("de.javakaffee:kryo-serializers:$v_kryo_serializers") {
                exclude group: 'org.ow2.asm', module: 'asm'
            },

            // UI
            "eu.davidea:flexible-adapter:5.0.0-rc2",
            "eu.davidea:flexible-adapter-databinding:1.0.0-b1@aar",
            "net.yslibrary.keyboardvisibilityevent:keyboardvisibilityevent:2.1.0",

            // Dialog
            "com.afollestad.material-dialogs:core:$v_material_dialogs",
            "com.afollestad.material-dialogs:commons:$v_material_dialogs",

            "com.eightbitlab:blurview:1.3.3",
            "com.github.andrewlord1990:snackbarbuilder:0.9.0",

            "com.github.BlacKCaT27:CurrencyEditText:2.0.1",

            //
            // FOR TESTING
            //

            //RX Location
            //"com.patloew.rxlocation:rxlocation:1.0.3",
            // GMS
            //"com.google.android.gms:play-services-location:9.4.0",
            //"com.google.android.gms:play-services-places:9.4.0",

            // Volley
            "com.android.volley:volley:1.0.0",

            // Anko
            "org.jetbrains.anko:anko-commons:$v_anko",

            // Anko Layouts
            "org.jetbrains.anko:anko-sdk25:$v_anko", // sdk15, sdk19, sdk21, sdk23 are also available
            "org.jetbrains.anko:anko-appcompat-v7:$v_anko",

            // Coroutine listeners for Anko Layouts
            "org.jetbrains.anko:anko-sdk25-coroutines:$v_anko",
            "org.jetbrains.anko:anko-appcompat-v7-coroutines:$v_anko",

            // Appcompat-v7 (only Anko Commons)
            "org.jetbrains.anko:anko-appcompat-v7-commons:$v_anko",

            // Appcompat-v7 (Anko Layouts)
            "org.jetbrains.anko:anko-appcompat-v7:$v_anko",
            "org.jetbrains.anko:anko-coroutines:$v_anko",

            // CardView-v7
            "org.jetbrains.anko:anko-cardview-v7:$v_anko",

            // Design
            "org.jetbrains.anko:anko-design:$v_anko",
            "org.jetbrains.anko:anko-design-coroutines:$v_anko",

            // GridLayout-v7
            "org.jetbrains.anko:anko-gridlayout-v7:$v_anko",

            // RecyclerView-v7
            "org.jetbrains.anko:anko-recyclerview-v7:$v_anko",
            "org.jetbrains.anko:anko-recyclerview-v7-coroutines:$v_anko",

            // Support-v4 (only Anko Commons)
            "org.jetbrains.anko:anko-support-v4-commons:$v_anko",

            // Support-v4 (Anko Layouts)
            "org.jetbrains.anko:anko-support-v4:$v_anko",

            "com.fenchtose:tooltip:0.1.5",
            "net.cachapa.expandablelayout:expandablelayout:2.9.2"
    )

    debugCompile(
            // Stetho
            "com.facebook.stetho:stetho:$v_stetho",
            "com.facebook.stetho:stetho-okhttp:$v_stetho",
    )

    testCompile(
            "junit:junit:$v_junit",

            "org.xerial:sqlite-jdbc:$v_xerial_sqlite",

            "org.robolectric:robolectric:$v_roboelectric",
            "org.robolectric:shadows-multidex:$v_roboelectric",
    )

    androidTestCompile(
            project(path: ':sx-common', configuration: 'testArtifacts'),
            project(path: ':sx-serialization', configuration: 'testArtifacts'),
            "junit:junit:$v_junit",
            "com.android.support:support-annotations:$v_android_support",
            "com.android.support.test:runner:$v_android_test",
            "com.android.support.test:rules:$v_android_test",
    )

    kapt(
            "org.parceler:parceler:$v_parceler",
            "com.android.databinding:compiler:2.3.3",
    )
}

victor {
    // Any assets defined in relative terms needs a base DPI specified
    svgDpi = 72

    // Do not generate these densities for SVG assets
    excludeDensities = ['ldpi']

    // WARNING: EXPERIMENTAL
    // Generates Android drawables instead of PNGs.
    // This is known not to work on only a subset of SVGs (e.g., does not support any value besides px).
    generateVectorDrawables = false
}

clean {
    doFirst {
        GENERATED_DIR.deleteDir()
    }
}

// masc20170526.
// Amend output paths of victor, as AndroidStudio designer cannot see
// generated resources/drawables in build folder

afterEvaluate {
    GENERATED_DIR.mkdirs()

    // Apply changes to all rasterize tasks
    tasks.findAll {
        it.name.startsWith("rasterize")
    }.each {
        project.task "${it.name}" {
            outputDir GENERATED_SVG_DIR
        }
    }
}

// Exclude sqlite native libs for release builds only.
// As android.packagingOptions can't be defined on build type level,
// need hook into tasks and clean before tasks.package*Release

def removeSqliteLibs() {
    fileTree("${buildDir}/intermediates") {
        include '**/arm64-v8a/libsqlite3x.so'
        include '**/x86/libsqlite3x.so'
        include '**/x86_64/libsqlite3x.so'
    }.each {
        it.absoluteFile.delete()
    }
}

afterEvaluate {
    tasks.packageProdRelease.doFirst {
        removeSqliteLibs()
    }
    tasks.packageDevRelease.doFirst {
        removeSqliteLibs()
    }

    // masc20170731. workaround for release builds failing
    // (when switching between product flavors, as we usually work in `dev` but native bundle is `prod`
    android.applicationVariants.findAll {
        it.buildType.name == 'release'
    }.forEach {
        it.assemble.dependsOn(tasks.cleanBuildCache)
    }
}

/**
 * Task for syncing mobile data project flyway sql migrations to android assets.
 * Should run prior to assembly of apk.
 * Flyway uses a specific internal scanning mechanism for android, only scanning assets
 */
task flywaySyncMigrations(type: Sync) {
    from new File(project.rootDir, 'leoz-mobile-data/src/main/resources/db/migration')
    into new File(project.projectDir, 'src/main/assets/db/migration')
}
tasks.preBuild.dependsOn(tasks.flywaySyncMigrations)

packager {
    title = 'Leoz Mobile'
    bundleName = 'leoz-mobile'

    android {
        buildType 'release'
        productFlavor 'prod'
    }
}
