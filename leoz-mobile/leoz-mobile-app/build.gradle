buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url '../../leoz-build/repo'
        }
    }

    dependencies {
        classpath(
                "com.android.tools.build:gradle:2.2.3",
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin",
                "com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.2",
                "sx:sx-packager-gradle:0.1",
        )
    }

    ext {
        v_android_buildtools = '25.0.2'
        v_android_support = '25.1.1'
        v_roboelectric = '3.2.2'
        v_rxlifecycle = '1.0'
        v_stetho = '1.4.2'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'sx-packager-android'

sourceCompatibility = 1.7
targetCompatibility = 1.7

def sdk = android.getSdkDirectory().toString()
def adb = android.getAdbExe().toString()

kapt {
    generateStubs true
}

android {
    compileSdkVersion 25
    buildToolsVersion v_android_buildtools

    defaultConfig {
        applicationId "org.deku.leoz.mobile"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "0.4-SNAPSHOT"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias 'leoz-mobile'
            keyPassword '6TL3IpcUhOv7K1dZ'
            storeFile new File(project.projectDir, '../leoz-mobile.jks')
            storePassword 'QzIKjZeRkct3B0on'
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro', 'proguard-rules-debug.pro'
            testProguardFile('proguard-rules.pro')
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    packagingOptions {
        // Exclude duplicates ad unnecessary files for a clean apk
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/kodein-android-compileKotlin.kotlin_module'
        exclude 'META-INF/kodein-compileKotlin.kotlin_module'
        exclude 'META-INF/kotlin-runtime.kotlin_module'
        exclude 'META-INF/kotlin-stdlib.kotlin_module'
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/rxjava-async-util.properties'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/rxkotlin.properties'
        exclude 'META-INF/rxkotlin-compileKotlin.kotlin_module'
        exclude 'META-INF/rxlifecycle-kotlin-compileReleaseKotlin.kotlin_module'
        exclude 'META-INF/sx-android-compileReleaseKotlin.kotlin_module'
        exclude 'META-INF/sx-common-compileKotlin.kotlin_module'
        exclude 'kotlin/annotation/annotation.kotlin_builtins'
        exclude 'kotlin/collections/collections.kotlin_builtins'
        exclude 'kotlin/internal/internal.kotlin_builtins'
        exclude 'kotlin/kotlin.kotlin_builtins'
        exclude 'kotlin/ranges/ranges.kotlin_builtins'
        exclude 'kotlin/reflect/reflect.kotlin_builtins'
    }
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = false
    orderByMethodCount = false
    verbose = false
    maxTreeDepth = Integer.MAX_VALUE
    teamCityIntegration = false
    enableForInstantRun = false
    teamCitySlug = null
    runOnEachAssemble = false
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    compile(
            project(':leoz-mobile-data'),
            project(':leoz-common'),
            project(':sx-common'),
            project(':sx-android'),
            project(':sx-android-honeywell'),
            project(':sx-serialization'),
            fileTree(dir: 'libs', include: ['*.jar']),

            // Android
            "com.android.support:support-annotations:$v_android_support",
            "com.android.support:appcompat-v7:$v_android_support",
            "com.android.support:design:$v_android_support",
            "com.android.support:cardview-v7:$v_android_support",
            "com.android.support:recyclerview-v7:$v_android_support",
            'com.android.support:multidex:1.0.1',

            // Kotlin
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Kodein
            "com.github.salomonbrys.kodein:kodein-android:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-conf:$v_kodein",

            // Logging
            "org.slf4j:slf4j-api:$v_slf4j",
            "org.slf4j:jul-to-slf4j:$v_slf4j",
            dependencies.create("com.github.tony19:logback-android-classic:1.1.1-6") {
                exclude group: 'com.google.android', module: 'android'
            },

            // Reactive
            "io.reactivex:rxjava:$v_rxjava",
            "io.reactivex:rxandroid:1.2.1",
            "io.reactivex:rxkotlin:$v_rxkotlin",
            "io.reactivex:rxjava-async-util:0.21.0",
            "com.github.davidmoten:rxjava-extras:0.8.0.6",
            "com.jakewharton.rxbinding:rxbinding:1.0.1",
            "com.trello:rxlifecycle:$v_rxlifecycle",
            "com.trello:rxlifecycle-kotlin:$v_rxlifecycle",
            "com.trello:rxlifecycle-components:$v_rxlifecycle",
            "com.tbruyelle.rxpermissions:rxpermissions:0.9.2@aar",

            // REST
            "com.netflix.feign:feign-core:$v_feign",
            "com.netflix.feign:feign-jackson:$v_feign",
            "com.netflix.feign:feign-jaxrs:$v_feign",

            // Requery
            "io.requery:requery:$v_requery",
            "io.requery:requery-android:$v_requery",

            // Flyway
            "org.sqldroid:sqldroid:1.0.3",
            "org.flywaydb:flyway-core:$v_flyway",

            // Miscellaneous
            "io.swagger:swagger-annotations:$v_swagger",

            // Kotlin extensions for activity/fragment state persistence
            "com.github.tinsukE:icekick:0.2",

            "org.parceler:parceler-api:1.1.6",
            'com.journeyapps:zxing-android-embedded:3.4.0',

            // YAML
            "pl.droidsonroids.yaml:snakeyaml:1.18-android",

            // Kryo
            dependencies.create("com.esotericsoftware:kryo:4.0.0") {
                exclude group: 'org.ow2.asm', module: 'asm'
            }
    )

    debugCompile(
            // Stetho
            "com.facebook.stetho:stetho:$v_stetho",
            "com.facebook.stetho:stetho-okhttp:$v_stetho",
    )

    testCompile(
            "junit:junit:$v_junit",
            "org.robolectric:robolectric:$v_roboelectric",
            "org.robolectric:shadows-multidex:$v_roboelectric",
    )

    androidTestCompile(
            "junit:junit:$v_junit",
            "com.android.support:support-annotations:$v_android_support",
            "com.android.support.test:runner:0.5",
            "com.android.support.test:rules:0.5",
//            dependencies.create('com.android.support.test.espresso:espresso-core:2.2.2') {
//                exclude group: 'com.android.support', module: 'support-annotations'
//            }
    )

    kapt(
            "org.parceler:parceler:1.1.6"
    )
}

/**
 * Task for syncing mobile data project flyway sql migrations to android assets.
 * Should run prior to assembly of apk.
 * Flyway uses a specific internal scanning mechanism for android, only scanning assets
 */
task flywaySyncMigrations(type: Sync) {
    from new File(project.rootDir, 'leoz-mobile-data/src/main/resources/db/migration')
    into new File(project.projectDir, 'src/main/assets/db/migration')
}
tasks.preBuild.dependsOn(tasks.flywaySyncMigrations)

packager {
    title = 'Leoz Mobile'
    bundleName = 'leoz-mobile'
}
