buildscript {
    dependencies {
        classpath(
                'com.android.tools.build:gradle:2.3.3',
                "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
        )
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

/** Base directory for generated classes */
def GENERATED_DIR = file("${project.projectDir}/src/generated")
/** Folder where kapt generates source files */
def KAPT_GENERATED_DIR = new File(project.buildDir, 'generated/source/kapt/main')
/** A destination folder where we sync kapt generated classes to, referring to kaptSync task/workaround see below */
def KAPT_DST_GENERATED_DIR = new File(GENERATED_DIR, 'kapt')

//idea {
//    module {
//        // Add KAPT generated sources to intellij
//        sourceDirs += KAPT_DST_GENERATED_DIR
//    }
//}

// TODO: stupid workaround for making AndroidStudio see kapt generated classes. Unlike IJ, AndroidStudio seems to ignore .java files in build dir even when they're explicltly added to `sourceDirs` via idea plugin
//task kaptSync(type: Sync) {
//    from KAPT_GENERATED_DIR
//    into KAPT_DST_GENERATED_DIR
//}
//tasks.classes {
//    dependsOn tasks.kaptSync
//}

configurations {
    // Configurations for libraries using dev/prod product flavors (for improved build performance)
    devDebugCompile
    devReleaseCompile
    prodDebugCompile
    prodReleaseCompile
}

android {
    publishNonDefault true
    compileSdkVersion 26
    buildToolsVersion v_android_buildtools
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    dataBinding {
        enabled true
    }

    lintOptions {
        abortOnError true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    productFlavors {
        dev {
            // Enable pre-dexing to produce an APK that can be tested on
            // Android 5.0+ without the time-consuming DEX build processes.
            minSdkVersion 21
        }

        prod {
            // The actual minSdkVersion for the production version.
            minSdkVersion 16
        }
    }
}

dependencies {
    devDebugCompile(
            project(path: ':sx-android', configuration: 'devDebug')
    )

    devReleaseCompile(
            project(path: ':sx-android', configuration: 'devRelease')
    )

    prodDebugCompile(
            project(path: ':sx-android', configuration: 'prodDebug')
    )

    prodReleaseCompile(
            project(path: ':sx-android', configuration: 'prodRelease')
    )

    compile(
            fileTree(dir: 'libs', include: ['*.jar']),

            project(':leoz-common'),
            project(':sx-serialization'),

            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Requery
            "io.requery:requery:$v_requery",
            "io.requery:requery-kotlin:$v_requery",

            // Jackson
            "com.fasterxml.jackson.core:jackson-databind:$v_jackson",
            "com.fasterxml.jackson.core:jackson-annotations:$v_jackson"
    )

    kapt(
            "io.requery:requery-processor:$v_requery",
            "com.android.databinding:compiler:2.3.3"
    )

    testCompile(
            "junit:junit:$v_junit",
            "org.xerial:sqlite-jdbc:$v_xerial_sqlite",

            // Kodein
            "com.github.salomonbrys.kodein:kodein:$v_kodein",
            "com.github.salomonbrys.kodein:kodein-conf:$v_kodein",

            // rx
            "io.reactivex.rxjava2:rxjava:$v_rxjava",
            "io.reactivex:rxkotlin:$v_rxkotlin",
    )
}

sourceSets {
    test {
        java {
            srcDirs += KAPT_GENERATED_DIR
        }
    }
}

clean {
    doLast {
        GENERATED_DIR.deleteDir()
    }
}
