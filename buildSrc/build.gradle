buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:+"
    }

    repositories {
        mavenCentral()
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-runtime:+"
    compile "org.jetbrains.kotlin:kotlin-stdlib:+"

    compile "org.apache.commons:commons-lang3:3.+"
    compile "org.eclipse.jgit:org.eclipse.jgit:4.+"
    compile 'com.google.guava:guava:18.+'
    compile 'org.ini4j:ini4j:+'
}

def srcdir_import = file("$projectDir/src/import/java")

sourceSets {
    main.java.srcDirs += srcdir_import
    main.java.srcDirs += 'src/main/kotlin'
}


// Task for importing classes from other projects
task syncClasses(type: Sync) {
    from '../libs/leoz-common/src/main/java', '../libs/sx-common/src/main/java'
    into srcdir_import
    include '**/build/**', '**/rsync/**', '**/ProcessExecutor*', '**/Disposable*/', '**/Action*/', '**/Rsync*/', '**/platform/**', '**/Bundle'
    includeEmptyDirs = false
}

// Clean build directory if class sync task performed action
tasks.syncClasses.doLast {
    new File(project.projectDir, 'build').deleteDir()
}

// Copy classes before compilation
compileJava.dependsOn(syncClasses)
compileKotlin.dependsOn(syncClasses)
