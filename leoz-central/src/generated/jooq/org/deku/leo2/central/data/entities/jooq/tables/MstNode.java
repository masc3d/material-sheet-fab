/**
 * This class is generated by jOOQ
 */
package org.deku.leo2.central.data.entities.jooq.tables;


import org.deku.leo2.central.data.entities.jooq.Dekuclient;
import org.deku.leo2.central.data.entities.jooq.Keys;
import org.deku.leo2.central.data.entities.jooq.tables.records.MstNodeRecord;
import org.jooq.*;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MstNode extends TableImpl<MstNodeRecord> {

	private static final long serialVersionUID = 1644492878;

	/**
	 * The reference instance of <code>dekuclient.mst_node</code>
	 */
	public static final MstNode MST_NODE = new MstNode();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MstNodeRecord> getRecordType() {
		return MstNodeRecord.class;
	}

	/**
	 * The column <code>dekuclient.mst_node.node_id</code>.
	 */
	public final TableField<MstNodeRecord, Integer> NODE_ID = createField("node_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>dekuclient.mst_node.key</code>.
	 */
	public final TableField<MstNodeRecord, String> KEY = createField("key", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>dekuclient.mst_node.authorized</code>.
	 */
	public final TableField<MstNodeRecord, Byte> AUTHORIZED = createField("authorized", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>dekuclient.mst_node.sys_info</code>.
	 */
	public final TableField<MstNodeRecord, String> SYS_INFO = createField("sys_info", org.jooq.impl.SQLDataType.VARCHAR.length(200), this, "");

	/**
	 * The column <code>dekuclient.mst_node.hostname</code>.
	 */
	public final TableField<MstNodeRecord, String> HOSTNAME = createField("hostname", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

	/**
	 * The column <code>dekuclient.mst_node.station_nr</code>.
	 */
	public final TableField<MstNodeRecord, Integer> STATION_NR = createField("station_nr", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>dekuclient.mst_node.timestamp</code>.
	 */
	public final TableField<MstNodeRecord, Timestamp> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>dekuclient.mst_node</code> table reference
	 */
	public MstNode() {
		this("mst_node", null);
	}

	/**
	 * Create an aliased <code>dekuclient.mst_node</code> table reference
	 */
	public MstNode(String alias) {
		this(alias, MST_NODE);
	}

	private MstNode(String alias, Table<MstNodeRecord> aliased) {
		this(alias, aliased, null);
	}

	private MstNode(String alias, Table<MstNodeRecord> aliased, Field<?>[] parameters) {
		super(alias, Dekuclient.DEKUCLIENT, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MstNodeRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MST_NODE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MstNodeRecord> getPrimaryKey() {
		return Keys.KEY_MST_NODE_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MstNodeRecord>> getKeys() {
		return Arrays.<UniqueKey<MstNodeRecord>>asList(Keys.KEY_MST_NODE_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MstNode as(String alias) {
		return new MstNode(alias, this);
	}

	/**
	 * Rename this table
	 */
	public MstNode rename(String name) {
		return new MstNode(name, null);
	}
}
