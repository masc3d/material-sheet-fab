apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: 'nu.studer.jooq'
apply plugin: org.deku.gradle.PackagerPlugin

sourceCompatibility = 1.8
version = '0.52-SNAPSHOT'
mainClassName = "org.deku.leoz.central.Main"

dependencies {
    // leoz webservice dependencies
    compile project(':libs:sx-common')
    compile project(':libs:leoz-common')
    compile project(':leoz-node')
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-runtime:$v_kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin"
    // db
    compile "mysql:mysql-connector-java:$v_mysql"
    // jooq
    compile "org.jooq:jooq:$v_jooq"

    // test dependencies
    testCompile group: 'junit', name: 'junit', version: v_junit
    // webservice client libraries for test cases
    testCompile "org.jboss.resteasy:resteasy-client:$v_resteasy"
    testCompile "org.springframework.boot:spring-boot-starter-test:$v_springboot"

    testCompile project(':libs:sx-common')
}

// Location for generated sources
// Directory for apt must be dedicated (no other generators may write here)
// otherwise triggering javac bug https://bugs.openjdk.java.net/browse/JDK-8062800
def srcdir_jooq = file("$projectDir/src/generated/jooq")

// Generate jooq for each compilation run
// tasks.compileJava.dependsOn(generateJooq)

jooq {
    main(sourceSets.main) {
        jdbc {
            url = 'jdbc:mysql://10.0.10.10:3306'
            driver = 'com.mysql.jdbc.Driver'
            user = 'root'
            password = 'root'
        }
        generator {
            database {
                name = 'org.jooq.util.mysql.MySQLDatabase'
                inputSchema = 'dekuclient'

                includes = 'tbldepotliste|mst_.*|sys_.*'
                //excludes '.*'

                // masc20140916. (almost) all tables
                //includes '.*'
                //excludes 'tbl_auftrag_info'
            }

            target {
                packageName = 'org.deku.leoz.central.data.entities.jooq'
                directory = srcdir_jooq.toString()
            }
        }
    }
}
tasks.generateMainJooqSchemaSource.outputs.upToDateWhen { false }

run {
    errorOutput = System.err
    standardOutput = System.out
    standardInput = System.in
}

// Required for eclipse modelgen to find xml resources (eg. persistence.xml)
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
compileJava.dependsOn(processResources)

tasks.classes.dependsOn(copySxPlatformDirToBuild)
tasks.classes.dependsOn(copyGlobalPlatformDirToBuild)

distributions {
    main {
        contents {
            from projectBuildSupplementalsDir
        }
    }
}

// Packager task
packager {
    title = "Leoz Central"
    releaseBasePath = g_release_path
    osxIcon = g_osx_icon
    windowsIcon = g_windows_icon
    supplementalPlatformDirs(
            (projectBuildPlatformDir): (platformDirRelative)
    )
}
