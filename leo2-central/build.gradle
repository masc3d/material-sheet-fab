// Gradle dependencies/plugins
buildscript {
    dependencies {
        // spring boot
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$v_springboot_gradle_plugin")

        // jooq codegen gradle plugin
        classpath 'com.github.ben-manes:gradle-jooq-plugin:+'

        // override jooq dependencies of gradle-jooq-plugin with desired version
        classpath("org.jooq:jooq-codegen:$v_jooq") {
            force: true
        }
        classpath("org.jooq:jooq-meta:$v_jooq") {
            force: true
        }

        // mysql jdbc connector
        classpath 'mysql:mysql-connector-java:5.+'
    }
}

apply plugin: 'application'
apply plugin: 'jooq'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
version = '0.1'
mainClassName = "org.deku.leo2.central.Main"

// Spring platform/plugin dependencyManagement
//dependencyManagement {
//    imports {
//        mavenBom "io.spring.platform:platform-bom:$v_spring_platform"
//    }
//}

dependencies {
    // leo2 webservice dependencies
    compile project(':leo2-common')
    compile project(':leo2-messaging')
    compile project(':leo2-node')
    compile project(':sx-common')

    // jooq
    compile "org.jooq:jooq:$v_jooq"

    // databases
    compile 'mysql:mysql-connector-java:5.+'

    // test dependencies
    testCompile group: 'junit', name: 'junit', version: '4.+'

    // webservice client libraries for test cases
    testCompile "org.jboss.resteasy:resteasy-client:$v_resteasy"
    testCompile "org.springframework.boot:spring-boot-starter-test:$v_springboot"

    testCompile project(':sx-common')
}

run {
    errorOutput = System.err
    standardOutput = System.out
    standardInput = System.in
}

//springBoot {
//    executable = true
//}

// Required for eclipse modelgen to find xml resources (eg. persistence.xml)
sourceSets.main.output.resourcesDir = sourceSets.main.output.classesDir
compileJava.dependsOn(processResources)

// Location for generated sources
// Directory for apt must be dedicated (no other generators may write here)
// otherwise triggering javac bug https://bugs.openjdk.java.net/browse/JDK-8062800
def srcdir_jooq = file("$projectDir/src/generated/jooq")

// Generate jooq for each compilation run
// tasks.compileJava.dependsOn(generateJooq)

jooq {
    jdbc {
        url 'jdbc:mysql://10.0.10.10:3306'
        driver 'com.mysql.jdbc.Driver'
        user 'root'
        password 'root'
    }
    generator {
        database {
            name 'org.jooq.util.mysql.MySQLDatabase'
            inputSchema 'dekuclient'

            includes 'tbldepotliste|country|holidayctrl|route|sector|station'
            //excludes '.*'

            // masc20140916. (almost) all tables
            //includes '.*'
            //excludes 'tbl_auftrag_info'
        }

        target {
            packageName 'org.deku.leo2.central.data.entities.jooq'
            directory srcdir_jooq.toString()
        }
    }
}
tasks.generateJooq.outputs.upToDateWhen { false }

task copyWebapp(type: Copy) {
    from 'src/main/webapp'
    into 'build/classes/main/webapp'
}

compileJava.dependsOn(copyWebapp)

// masc20150507. task prototypes
////copying all dependencies attached to 'compile' into a specific folder
//task copyAllDependencies(type: Copy) {
//    //referring to the 'compile' configuration
//    from configurations.compile
//    into 'allLibs'
//}
//
//configurations.all.each {
//    println "compile: $it"
//}
//
//sourceSets.main.compileClasspath.each {
//    println "ss: $it"
//}

//configurations.compile.allDependencies.each {
//    println "$it.group:$it.name:$it.version"
//
//}
