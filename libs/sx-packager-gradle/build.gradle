group = 'sx'
version = '0.1'

buildscript {
    ext {
        v_kotlin = '1.2.21'
        v_jsch = '0.1.54'
        v_jsch_proxy = '0.0.9'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'java-library-distribution'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // Kotlin
    compile(
            localGroovy(),
            gradleApi(),

            project(':sx-common'),
            project(':sx-packager'),

            // JSR-310 / java.time drop-in replacement
            "org.threeten:threetenbp:1.3.6",

            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$v_kotlin",

            "org.apache.commons:commons-compress:1.13",
            "commons-io:commons-io:2.6",
            "org.tukaani:xz:1.6",
            "org.eclipse.jgit:org.eclipse.jgit:4.10.0.201712302008-r",

            // For authenticating ssh/jgit against key agent
            "com.jcraft:jsch:$v_jsch",
            "com.jcraft:jsch.agentproxy.connector-factory:$v_jsch_proxy",
            "com.jcraft:jsch.agentproxy.jsch:$v_jsch_proxy",
            "com.jcraft:jsch.agentproxy.sshagent:$v_jsch_proxy",
            "com.jcraft:jsch.agentproxy.pageant:$v_jsch_proxy",
    )

    testCompile(
            gradleTestKit(),
            "junit:junit:4.12",
    )

    configurations {
        testRuntime {
            // Resolves multiple slf4j bindings between gradle/testkit & logback
            exclude group: 'ch.qos.logback'
        }
    }
}

test {
    useJUnit {
        includeCategories 'sx.junit.StandardTest'
    }
}

