import org.deku.gradle.PackagerPlugin

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: PackagerPlugin

version '0.22-RELEASE'
sourceCompatibility = 1.8
mainClassName = "org.deku.leoz.boot.ApplicationKt"

buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$v_kotlin"
    }
}

dependencies {
    compile(
            project(':libs:sx-common'),
            project(':libs:sx-fx'),
            project(':libs:sx-ssh'),
            project(':leoz-common'),

            // Kotlin
            "org.jetbrains.kotlin:kotlin-runtime:$v_kotlin",
            "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin",

            // Logging
            "ch.qos.logback:logback-classic:$v_logback",
            "org.slf4j:jcl-over-slf4j:$v_slf4j",

            // command line
            "com.beust:jcommander:1.56",

            // ini/conf file
            "org.ini4j:ini4j:$v_ini4j",

            // ssh support
            "org.apache.sshd:sshd-core:$v_sshd",

            "com.dooapp.fxform2:core:$v_fxform2",
            "org.jfxtras:jfxtras-all:8.0-r5"
    )

    testCompile group: 'junit', name: 'junit', version: v_junit
}

sourceSets {
    // Add resources (like .fxml files) from souce path.
    // Non-standard, but nicer to keep .fxml files together with classes
    main.resources.srcDir 'src/main/java'
}

jar {
    manifest {
        attributes(
                'SplashScreen-Image': 'images/DEKU.splash.png'
        )
    }
}
tasks.classes.dependsOn(copySxPlatformDirToBuild)
tasks.classes.dependsOn(copyGlobalPlatformDirToBuild)

distributions {
    main {
        contents {
            from projectBuildSupplementalsDir
        }
    }
}

packager {
    title = "Leoz Boot"
    releaseBasePath = g_release_path
    osxIcon = g_osx_icon
    windowsIcon = g_windows_icon
    supplementalPlatformDirs(
            (projectBuildPlatformDir): (platformDirRelative)
    )
    createSelfExtractingArchive = true
}
