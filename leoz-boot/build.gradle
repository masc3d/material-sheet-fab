import org.deku.gradle.PackagerPlugin

apply plugin: 'kotlin'
apply plugin: 'application'
apply plugin: PackagerPlugin

version '0.7-RELEASE'
sourceCompatibility = 1.8
mainClassName = "org.deku.leoz.boot.ApplicationKt"

dependencies {
    compile project(':libs:sx-common')
    compile project(':libs:leoz-common')

    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-runtime:$v_kotlin"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$v_kotlin"

    // Logging
    compile 'commons-logging:commons-logging:+'
    compile "ch.qos.logback:logback-classic:$v_logback"
    compile "org.slf4j:jcl-over-slf4j:$v_slf4j"

    // command line
    compile "com.beust:jcommander:+"

    // ini/conf file
    compile 'org.ini4j:ini4j:+'

    compile "org.jfxtras:jfxtras-all:8.+"
    compile "com.dooapp.fxform2:core:8.+"

    testCompile group: 'junit', name: 'junit', version: v_junit
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'

    // Add resources (like .fxml files) from souce path.
    // Non-standard, but nicer to keep .fxml files together with classes
    main.resources.srcDir 'src/main/java'
}

jar {
    manifest {
        attributes(
                'SplashScreen-Image': 'images/DEKU.splash.png'
        )
    }
}
tasks.classes.dependsOn(copySxBinariesToBuild)
tasks.classes.dependsOn(copyGlobalBinariesToBuild)

distributions {
    main {
        contents {
            from projectBuildSupplementalsDir
        }
    }
}

packager {
    title = "Leoz Boot"
    releaseBasePath = g_release_path
    osxIcon = g_osx_icon
    windowsIcon = g_windows_icon
    supplementalPlatformDirs(
            (projectBuildBinDir): new File('bin')
    )
    createSelfExtractingArchive = true
}
