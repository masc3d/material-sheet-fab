version = '0.1'

buildscript {
    ext {
        v_springboot_gradle_plugin= "1.3.0.+"
    }
    repositories {
        jcenter()
        maven { url 'http://repo.spring.io/snapshot' }
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:" + v_springboot_gradle_plugin)
        classpath 'org.springframework.build.gradle:propdeps-plugin:+'
    }
}

allprojects {
    buildscript {
        // Global variables
        ext {
            v_activemq = "5.+"
            v_eclipselink = "2.+"
            v_guava = "18.0"
            v_h2 = "1.+"
            v_hk2 = "2.+"
            v_hibernate = "5.2.+"
            v_jackson = "2.+"
            v_javax_servlet = "3.1.+"
            v_javax_persistence = "2.1.+"
            v_javax_ws_rs = "2.0.+"
            v_jersey = "2.+"
            v_jetty = "9.2.+"
            v_jooq = "3.+"
            v_junit = "4.+"
            v_querydsl = "3.+"
            v_mysql = "5.+"
            // Resteasy > 3.0.9 breaks integration with spring-boot.
            // it actually still works fine when spring is initialized via resteasy's SpringContextLoaderListener
            v_resteasy = "3.0.+"
            v_slf4j = "1.+"
            v_spring = "4.1.6.+"
            v_spring_platform = "1.1.3.BUILD-SNAPSHOT"
            v_springboot = "1.2.4.+"
            v_springboot_dep_plugin = "+"
        }
    }
}

project(':leo2-node') {
    apply plugin: 'spring-boot'

    // Spring platform/plugin dependencyManagement
    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:$v_spring_platform"
        }
    }

    springBoot {
        executable = true
    }
}

project(':leo2-central') {
    apply plugin: 'spring-boot'

    // Spring platform/plugin dependencyManagement
    dependencyManagement {
        imports {
            mavenBom "io.spring.platform:platform-bom:$v_spring_platform"
        }
    }

    springBoot {
        executable = true
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'project-report'

    // Reporting setup
    tasks.compileJava.dependsOn(tasks.dependencyReport)
    tasks.compileJava.dependsOn(tasks.htmlDependencyReport)
    projectReportDirName = '../../reports'

    // Global repositories
    repositories {
        jcenter()
        maven {
            url "http://repo.spring.io/snapshot"
        }
        mavenCentral()
    }

    // Global buildscript repositories
    buildscript {
        repositories {
            jcenter()
            maven {
                url "http://repo.spring.io/snapshot"
            }
            mavenCentral()
        }
        dependencies {
            classpath("org.springframework.boot:spring-boot-gradle-plugin:$v_springboot_gradle_plugin")
        }
    }

    // Global dependency resolution
    configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()

            // Force overrides for newer versions of (transitive) dependencies for all projects consistently
            // Version overrides
            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                // Spring
                if (details.requested.group == 'org.springframework') {
                    details.useVersion v_spring
                // Jackson
                } else if (details.requested.group.startsWith('com.fasterxml.jackson')) {
                    details.useVersion v_jackson
                } else if (details.requested.group == 'org.slf4j') {
                    details.useVersion v_slf4j
                } else if (details.requested.group == 'org.apache.activemq') {
                    details.useVersion v_activemq
                } else if (details.requested.group == 'com.google.guava') {
                    details.useVersion v_guava
                } else if (details.requested.group == 'javax.servlet') {
                    details.useVersion v_javax_servlet
                } else if (details.requested.group == 'org.hamcrest') {
                    details.useVersion "1.+"
                } else if (details.requested.group == 'org.javassist') {
                    details.useVersion "3.+"
                } else if (details.requested.group == 'org.yaml') {
                    details.useVersion "1.+"
                } else if (details.requested.group == 'org.hibernate') {
                    details.useVersion v_hibernate
                }
            }

            force "com.mysema.querydsl:querydsl-codegen:$v_querydsl"

            // Apache common
            force "commons-logging:commons-logging:1.+"
            force "org.apache.httpcomponents:httpclient:4.+"

            // Hawt
            force "org.fusesource.hawtdispatch:hawtdispatch-transport:1.+"
            force "org.fusesource.hawtbuf:hawtbuf:1.+"

            force "com.google.guava:guava:$v_guava"
            force "com.thoughtworks.xstream:xstream:1.+"

            force "org.jboss.logging:jboss-logging:3.+"
            force "org.jboss.logging:jboss-logging-annotations:1.+"
        }
    }
}
